name: CI/CD workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  packages: write

jobs:
  ci:
    runs-on: ubuntu-latest
    container: node:21-alpine
    defaults:
      run:
        working-directory: ./app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: extractions/setup-just@v1

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Build project
        run: just build

      - name: Archive production artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: |
            ./app/dist
            !./app/dist/**/*.md

  deploy-to-gh-pages:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: ci
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app

      - name: List artifact files
        run: ls

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload to pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  build-docker-image:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ghcr.io/vncsmyrnk/portfolio:latest

  deploy-to-koyeb:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-docker-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: extractions/setup-just@v1

      - name: Deploy
        env:
          TOKEN: ${{ secrets.KOYEB_TOKEN }}
          SERVICEID: ${{ secrets.KOYEB_SERVICEID }}
        run: KOYEB_TOKEN=$TOKEN KOYEB_SERVICEID=$SERVICEID just deploy-to-koyeb
